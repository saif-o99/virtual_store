[{"F:\\virtual_store\\src\\index.js":"1","F:\\virtual_store\\src\\reportWebVitals.js":"2","F:\\virtual_store\\src\\app.js":"3","F:\\virtual_store\\src\\firebase.utils.js":"4","F:\\virtual_store\\src\\components\\app-routes\\app-routes.js":"5","F:\\virtual_store\\src\\components\\LoginPage\\Login.js":"6","F:\\virtual_store\\src\\components\\registration\\registration.js":"7"},{"size":500,"mtime":1608542066624,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1388,"mtime":1608903997650,"results":"11","hashOfConfig":"9"},{"size":1256,"mtime":1608904216013,"results":"12","hashOfConfig":"9"},{"size":569,"mtime":1608903722929,"results":"13","hashOfConfig":"9"},{"size":6946,"mtime":1608904175134,"results":"14","hashOfConfig":"9"},{"size":10548,"mtime":1610862286734,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1jp7tzm",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\virtual_store\\src\\index.js",[],["32","33"],"F:\\virtual_store\\src\\reportWebVitals.js",[],"F:\\virtual_store\\src\\app.js",[],"F:\\virtual_store\\src\\firebase.utils.js",[],"F:\\virtual_store\\src\\components\\app-routes\\app-routes.js",[],"F:\\virtual_store\\src\\components\\LoginPage\\Login.js",["34"],"import React, {useEffect, useState} from 'react';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {auth, SignInWithGoogle} from \"../../firebase.utils\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport GoogleIcon from \"../assets/google.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        background: '#f7f8fb',\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        flexDirection: \"column\",\r\n        [theme.breakpoints.down('xs')]: {\r\n            justifyContent: \"flex-start\",\r\n        },\r\n    },\r\n    card: {\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n        maxWidth: \"480px\",\r\n        borderRadius: \"8px\",\r\n        flexDirection: \"column\",\r\n        display: \"flex\",\r\n        overflow: \"hidden\",\r\n        boxSizing: \"border-box\",\r\n        background: \"linear-gradient(180deg, rgba(255,255,255,0.85), rgba(255,255,255,0.5), rgba(255,255,255,0.0) 60%)\",\r\n        boxShadow: `16px 24px 32px 8px rgba(200,200,200,0.02)`,\r\n        padding: \"48px 56px\",\r\n    }\r\n}));\r\n\r\nfunction LoginPage({history}) {\r\n    const classes = useStyles();\r\n\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        auth.getRedirectResult().then(function (result) {\r\n        }).catch(function (error) {\r\n            setError(error.message)\r\n        });\r\n    });\r\n\r\n    // Handle Login\r\n    const login = (e) => {\r\n        e.preventDefault()\r\n        const {email, password } = e.target.elements;\r\n\r\n            auth.signInWithEmailAndPassword(email.value, password.value)\r\n                .then(() => {\r\n                    // Automatic Redirect to HomeIndex\r\n                    history.push('/')\r\n                })\r\n                .catch((err) => {\r\n                    switch (err.code) {\r\n                        case \"auth/user-not-found\":\r\n                            return setError(\"Couldn't find your account.\");\r\n                        case \"auth/wrong-password\":\r\n                            return setError( \"That's an incorrect password. Try again.\");\r\n                        case \"auth/invalid-email\":\r\n                            return setError( \"Please enter a valid Email Address.\");\r\n                        default:\r\n                            return setError(\"Something went wrong on our side.\");\r\n                    }\r\n                });\r\n\r\n    };\r\n    const loginWithGoogle = () => {\r\n        history.push(\"/register?auth=google\");\r\n        try {\r\n            SignInWithGoogle().then(() => {\r\n            }).catch(err => {\r\n                let errorMessage = err.message;\r\n                setError(errorMessage);\r\n            });\r\n        } catch (e) {\r\n            let errorMessage = e.message;\r\n            setError(errorMessage);\r\n        }\r\n    };\r\n    return (\r\n        <div className={classes.background}>\r\n            <div style={{height: \"64px\"}}/>\r\n            <div style={{display: \"none\"}}>{error}</div>\r\n            <Grid justify={\"center\"} component={\"div\"} container>\r\n                <Grid component={\"div\"} xl={5} lg={5} md={6} sm={6} xs={12} item\r\n                      style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                    <div className={classes.card}>\r\n                        <form onSubmit={login}>\r\n                            <div style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"flex-end\",\r\n                                justifyContent: \"space-between\",\r\n                                marginBottom: \"16px\"\r\n                            }}>\r\n                                <Typography variant={\"h5\"}>Sign In</Typography>\r\n                                <Typography variant={\"body2\"}>\r\n                                    <span style={{opacity: \"0.6\", marginRight: \"8px\"}}>New User?</span>\r\n                                    <Typography variant={\"body2\"} component={\"span\"}><Link to={\"/register\"}\r\n                                                                                           style={{color: \"blue\"}}\r\n                                                                                           variant={\"secondary\"}>Sign\r\n                                        Up</Link></Typography>\r\n                                </Typography>\r\n                            </div>\r\n                            <div style={{height: '15px'}}/>\r\n                            <TextField label=\"Email Address\" variant=\"outlined\" type={\"email\"} name={\"email\"}\r\n                                       fullWidth/>\r\n                            <div style={{height: '15px'}}/>\r\n                            <TextField label=\"Set Password\" variant=\"outlined\" type={\"password\"} name={\"password\"}\r\n                                       fullWidth/>\r\n                            <div style={{height: '10px'}}/>\r\n                            {error !== \"\" &&\r\n                            <Alert severity=\"error\">{error}</Alert>\r\n                            }\r\n                            <div style={{height: '10px'}}/>\r\n                            <Button type={\"submit\"} style={{\r\n                                marginTop: \"24px\",\r\n                                background: \"black\",\r\n                                color: 'white',\r\n                                padding: \"12px 50px\"\r\n                            }}> Sign In </Button>\r\n                        </form>\r\n                        <div style={{display: \"flex\", margin: \"24px 5%\", alignItems: \"center\"}}>\r\n                            <div style={{flex: \"1\", height: \"2px\", background: \"grey\", opacity: \"0.1\"}}/>\r\n                            <Typography variant={\"body2\"} component={\"span\"}\r\n                                        style={{color: \"grey\", margin: \"0 12px\"}}>or</Typography>\r\n                            <div style={{flex: \"1\", height: \"2px\", background: \"grey\", opacity: \"0.1\"}}/>\r\n                        </div>\r\n                        <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                            <IconButton background={\"white\"} onClick={loginWithGoogle}\r\n                                        style={{borderRadius: '30px', background: 'white', fontSize: \"14px\"}}\r\n                            ><img src={GoogleIcon} width={20} height={20} style={{marginRight: \"15px\"}}/>Continue\r\n                                with Google</IconButton>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <div style={{height: \"64px\"}}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","F:\\virtual_store\\src\\components\\registration\\registration.js",["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":142,"column":30,"nodeType":"43","endLine":142,"endColumn":106},{"ruleId":"44","severity":1,"message":"45","line":49,"column":12,"nodeType":"46","messageId":"47","endLine":49,"endColumn":16},{"ruleId":"41","severity":1,"message":"42","line":216,"column":34,"nodeType":"43","endLine":216,"endColumn":110},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'page' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]